/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  IAMDataDAO,
  IAMDataDAOInterface,
} from "../../../contracts/IAMDataDao.sol/IAMDataDAO";

const _abi = [
  {
    inputs: [],
    name: "approveRegistrant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approveReviewer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "changeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "grantAccress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "roleOfAccount",
    outputs: [
      {
        internalType: "enum IAMDataDAO.ROLES",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610282806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631493b92b1461005c578063222f13bc1461005c578063a305d71914610066578063dd9befbe1461005c578063eaf00fd214610079575b600080fd5b6100646100b2565b005b6100646100743660046101de565b61014a565b61009c6100873660046101de565b60006020819052908152604090205460ff1681565b6040516100a99190610224565b60405180910390f35b3360009081526020819052604090205460ff1660018160038111156100d9576100d961020e565b14806100f6575060008160038111156100f4576100f461020e565b145b6101475760405162461bcd60e51b815260206004820152601f60248201527f4163636573732044656e6965643a2041646d696e7320616e642061626f76650060448201526064015b60405180910390fd5b50565b3360009081526020819052604090205460ff1660018160038111156101715761017161020e565b148061018e5750600081600381111561018c5761018c61020e565b145b6101da5760405162461bcd60e51b815260206004820152601f60248201527f4163636573732044656e6965643a2041646d696e7320616e642061626f766500604482015260640161013e565b5050565b6000602082840312156101f057600080fd5b81356001600160a01b038116811461020757600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061024657634e487b7160e01b600052602160045260246000fd5b9190529056fea264697066735822122096d3479acc74dea73838400ed448fecf79c61951f48e452e4082395b1a1923b964736f6c63430008110033";

type IAMDataDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IAMDataDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IAMDataDAO__factory extends ContractFactory {
  constructor(...args: IAMDataDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IAMDataDAO> {
    return super.deploy(overrides || {}) as Promise<IAMDataDAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IAMDataDAO {
    return super.attach(address) as IAMDataDAO;
  }
  override connect(signer: Signer): IAMDataDAO__factory {
    return super.connect(signer) as IAMDataDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IAMDataDAOInterface {
    return new utils.Interface(_abi) as IAMDataDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAMDataDAO {
    return new Contract(address, _abi, signerOrProvider) as IAMDataDAO;
  }
}
